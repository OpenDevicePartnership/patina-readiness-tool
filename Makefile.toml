[config]
default_to_workspace = false

[env]
# This is needed due to uefi-sdk's use of unstable features.
RUSTC_BOOTSTRAP = 1

# Builds binaries for all supported targets.
[tasks.build-x64-uefi]
description = "Builds the x64 Dxe Readiness Capture UEFI binary."
command = "cargo"
args = [
    "build",
    "-p",
    "dxe_readiness_capture",
    "--target",
    "x86_64-unknown-uefi",
]

[tasks.build-aarch64-uefi]
description = "Builds the aarch64 Dxe Readiness Capture UEFI binary."
command = "cargo"
args = [
    "build",
    "-p",
    "dxe_readiness_capture",
    "--target",
    "aarch64-unknown-uefi",
]

[tasks.build-x64-windows]
description = "Builds the x64 Dxe Readiness Validation binary."
command = "cargo"
args = [
    "build",
    "-p",
    "dxe_readiness_validator",
    "--target",
    "x86_64-pc-windows-msvc",
]

[tasks.build-aarch64-windows]
description = "Builds the aarch64 Dxe Readiness Validation binary."
command = "cargo"
args = [
    "build",
    "-p",
    "dxe_readiness_validator",
    "--target",
    "aarch64-pc-windows-msvc",
]

[tasks.build]
description = "Run all binaries."
clear = true
dependencies = [
    "build-x64-uefi",
    "build-aarch64-uefi",
    "build-x64-windows",
    "build-aarch64-windows",
]

# Tests will be built and run based on the host platform.
[tasks.test-capture-binary]
description = "Build and run tests for Dxe Readiness Capture UEFI binary."
command = "cargo"
args = ["nextest", "run", "-p", "dxe_readiness_capture", "--no-tests", "pass", "${@}"]

[tasks.test-validation-binary]
description = "Build and run tests for Dxe Readiness Validation binary."
command = "cargo"
args = ["nextest", "run", "-p", "dxe_readiness_validator", "--no-tests", "pass", "${@}"]

[tasks.test-common]
description = "Build and run tests for Common lib."
command = "cargo"
args = ["nextest", "run", "-p", "common", "--no-tests", "pass", "${@}"]

[tasks.test]
description = "Build and run tests for all binaries."
clear = true
dependencies = ["test-capture-binary", "test-validation-binary", "test-common"]

# Run validator binary for all supported targets.
[tasks.run-validator]
description = "Run the Dxe Readiness Validation binary."
command = "cargo"
args = ["run", "-p", "dxe_readiness_validator", "${@}"]

[tasks.run]
description = "Run validator binary."
clear = true
dependencies = ["run-validator"]

[tasks.coverage]
description = "Build and run all tests and calculate coverage."
clear = true
command = "cargo"
args = [
    "tarpaulin",
    "--output-dir",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target",
    "--out",
    "Html",
]

[tasks.clippy]
description = "Run cargo clippy."
clear = true
command = "cargo"
args = ["clippy", "--all-targets", "--all-features", "--", "-D", "warnings"]

[tasks.doc]
env = { RUSTDOCFLAGS = "-D warnings" }
description = "Builds all rust documentation in the workspace. Example `cargo make doc`"
command = "cargo"
args = [
    "doc",
    "@@split(INDIVIDUAL_PACKAGE_TARGETS, )",
    "--open",
]

[tasks.fmt]
description = "Run cargo format."
clear = true
command = "cargo"
args = ["fmt", "--all"]

[tasks.cspell]
description = "Run cspell for spell checking."                                                                                                                                     # npm install -g cspell@latest
script = "cspell --quiet  --no-progress --no-summary  --dot --gitignore -e \"{.git/**,.github/**,.vscode/**,.azurepipelines/**,dxe_readiness_validator/src/tests/data/*.json}\" ."

[tasks.all]
description = "Run all tasks for PR readiness."
dependencies = [
    "clippy",
    "cspell",
    "build",
    "test",
    "coverage",
    "fmt",
    "doc",
]
